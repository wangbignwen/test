<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
         http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion><!--定义maven版本-->


    <groupId>com.wbw</groupId>
    <artifactId>test</artifactId><!--尽量与projectName保持相同-->
    <version>${project.release.version}</version><!--采用占位符形式，控制部署到快照仓库或发布仓库-->
    <packaging>jar</packaging>

    <!--springBoot父类框架依赖，内含自动装配依赖，mavenBuildPlugins工具，profile定义环境工具-->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.4.RELEASE</version>
    </parent>

<dependencies>

    <!--内含tomcat，springmvc，springWeb等web应用必要的依赖-->
    <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-web</artifactId>
    </dependency>

    <!--mybatis底层就是jdbc  配置文件需在mybatis.mapper-locations中定义mapper.xml文件路径，
    dao层的@Mapper，启动类的@MapperScan-->
    <dependency>
        <groupId>org.mybatis.spring.boot</groupId>
        <artifactId>mybatis-spring-boot-starter</artifactId>
        <version>2.0.1</version>
    </dependency>

    <!--需配置 数据库用户密码，数据库地址，驱动-->
    <dependency>
        <groupId>mysql</groupId>
        <artifactId>mysql-connector-java</artifactId>
    </dependency>

    <!--test  scope控制当前依赖在不同时期编译期、测试期、运行期生效的关系-->
    <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-test</artifactId>
        <scope>runtime</scope>
    </dependency>

    <!--简化get和set方法，toString方法，hashcode方法，equals方法-->
    <dependency>
        <groupId>org.projectlombok</groupId>
        <artifactId>lombok</artifactId>
        <version>1.18.26</version>
    </dependency>

    <dependency>
        <groupId>com.alibaba</groupId>
        <artifactId>fastjson</artifactId>
        <version>2.0.25</version>
    </dependency>

    <!--spring整合rabbitMp-->
    <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-amqp</artifactId>
    </dependency>

    <!--内涵redisTemplate,不包含redis锁-->
    <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-data-redis</artifactId>
    </dependency>

    <!--xls(03)-->
    <dependency>
        <groupId>org.apache.poi</groupId>
        <artifactId>poi</artifactId>
        <version>5.2.2</version>
    </dependency>

    <!--xlsx(07)-->
    <dependency>
        <groupId>org.apache.poi</groupId>
        <artifactId>poi-ooxml</artifactId>
        <version>5.2.2</version>
    </dependency>

    <!--时间格式化工具-->
    <dependency>
        <groupId>joda-time</groupId>
        <artifactId>joda-time</artifactId>
        <version>2.12.2</version>
    </dependency>

</dependencies>

    <!--默认的版本号-->
    <properties>
        <project.release.version>0.1-SNAPSHOT</project.release.version>
    </properties>

    <!--配置-->
    <profiles>
        <profile>
            <id>release</id>
            <properties>
                <project.release.version>0.1</project.release.version>
            </properties>
        </profile>
    </profiles>


    <!--定义snapshots库和releases库的nexus地址，
    使用mvn deploy 将jar包推到私仓，使用的是默认的版本号0.1-SNAPSHOT,推到SNAPSHOT仓
    使用mvn deploy -P release时，使用的是id为release的project配置的版本号即0.1
    -->
    <distributionManagement>
        <repository>
            <id>wbw2</id>  <!--与setting文件中的serverId对应，设定登录该仓库的账号密码-->
            <name>wbw-release</name>
            <url>http://120.48.87.190:8081/repository/wbw-release/</url>
        </repository>
        <snapshotRepository>
            <id>wbw2-snapshots</id>
            <name>libs-snapshots</name>
            <url>http://test.nexus.com/libs-snapshots</url>
        </snapshotRepository>
    </distributionManagement>

    <!-- 配置远程仓库，下载pom使用该仓库 -->
   <repositories>
       <repository>
           <id>jboss</id>
           <name>JBoss Repository</name>
           <url>http://repository.jboss.com/maven2/</url>
           <releases>
               <enabled>true</enabled>  <!--表示可以下载该仓库的release版本pom-->
               <updatePolicy>always</updatePolicy>  <!--更新策略为每次构建都更新-->
            </releases>
            <snapshots>
                <enabled>false</enabled>  <!--表示不可以下载该仓库的快照版本pom-->
                <checksumPolicy>warn</checksumPolicy><!--构建校验异常时，输出警告信息-->
            </snapshots>
            <layout>default</layout>
        </repository>
    </repositories>




</project>